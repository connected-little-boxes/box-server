<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <title>Connected Little Boxes</title>
</head>

<body>

</body>
<div class="container mb-2 mt-2">
    <h1 class="mb-4">&#128421;&#65039; Hull Pixelbot Python-ish Editor</h1>
</div>
<div class="container mb-4">
    <h1 class="mb-4">
        <%= device.friendlyName %>
    </h1>
    <div class="container mb-2 mt-2">
        <form method="POST" action="/openDevice/saveProgram/<%= device.name %>">
        <label for="codeTextarea">Enter your text:</label>
        <textarea id="codeTextarea" name="codeTextarea" style="font-family:monospace;" class="w-100" rows="20" cols="120"></textarea>
        <input type="submit" value="Submit" class="btn btn-primary mb-2" >
      </form>
    </div>

    <div class="container mb-2 mt-2" id="actionButtons">
        <div class="row justify-content-between">
            <div class="col">
                <button class="btn btn-primary mb-2" onclick="doSend();">Send </button>
            </div>
            <div class="col">
                <button class="btn btn-primary mb-2" onclick="doRun();">Run</button>
            </div>
            <div class="col">
                <button class="btn btn-primary mb-2" onclick="doStop();">Stop</button>
            </div>
            <div class="col">
                <button class="btn btn-primary mb-2" onclick="doSampleProgram();">Sample</button>
            </div>
            <div class="col">
                <button class="btn btn-primary mb-2" onclick="doClearProgram();">Clear</button>
            </div>
            <div class="col">
                <button class="btn btn-primary mb-2" onclick="doViewProgram();">View</button>
            </div>
        </div>
    </div>


    <script>

        async function getFromServer(url) {

            try {
                let result = await fetch(url, {
                    credentials: "include",
                });
                let data = await result.json();
                return data;
            }
            catch (error) {
                alert(`Bad fetch: ${error}`);
                return null;
            }
        }

        async function delay(timeInMs) {
            return new Promise(async (kept, broken) => {
                setTimeout(async () => {
                    return kept("tick");
                }, timeInMs);
            });
        }

        function logText(text) {
            let output = document.getElementById('output');
            output.value = output.value + text;
            output.scrollTop = output.scrollHeight;
        }

        function setActionButtonsDisabled(state) {
            let buttonDiv = document.getElementById("actionButtons");
            var buttons = buttonDiv.getElementsByTagName('button');
            for (let i = 0; i < buttons.length; i++) {
                let button = buttons[i];
                button.disabled = state;
            }
        }

        async function doOnLoad() {
            if (!"serial" in navigator) {
                alert("This browser does not support serial communications. Try Edge or Chrome");
                return;
            }
            serial = new Serial();
            setActionButtonsDisabled(true);
        }

        async function doSend() {
            let input = document.getElementById('textEdit');
            let text = input.value;
            let lines = text.split("\n");


            if (result != "OK") {
                alert(result);
            }
        }

        async function doRun() {
            await serial.sendCommand('*rs');
        }

        async function doStop() {
            await serial.sendCommand('*rh');
        }

        async function doViewProgram() {
            await serial.sendCommand('*ip');
        }

        let builtInProgramNo = 0;

        let builtInPrograms = [
            `# Coloured flashing
forever
  red
  delay 5
  green
  delay 5
`,
            `# Alarm 
forever
  sound 1000
  delay 5
  sound 2000
  delay 5
`,
            `# square dance 
forever
  move 100
  turn 90
`,
            `# distance light 
forever
  d = @distance
  if d < 100:
    red
    continue
  if d < 200:
    yellow
    continue
  green
`,
            `# robot coward 
forever
  green
  d = @distance
  if d < 100:
    red
    move -100
`,
            `# turn and run 
forever
  green
  d = @distance
  if d < 100:
    red
    turn 180
    move 100
`,
            `# avoid obstacles 
forever
  green
  move
  d = @distance
  if d < 100:
    red
    turn 90
`,
            `# spin the bottle
forever
  green
  if @distance < 100:
    a = @random*30
    a = a+360
    red
    turn a
`,
            `# theramin
forever
  f=@distance*20
  f=f+1000
  sound f
`
        ];

        function doSampleProgram() {
            let input = document.getElementById('codeTextarea');
            input.value = builtInPrograms[builtInProgramNo];
            builtInProgramNo++;
            if (builtInProgramNo == builtInPrograms.length) {
                builtInProgramNo = 0;
            }
        }

    </script>
    </body>

</html>